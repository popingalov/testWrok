{"version":3,"sources":["Components/calc.js","App.js","index.js"],"names":["optionc","opc","Calc","arg","distance","convert_to","useState","state","setstate","togle","settogle","startMetr","setstartMetr","endtMetr","setEndMetr","valueStart","setValueStart","valueEnd","setValueEnd","unit","value","result","setResult","useEffect","to","round","Number","Math","open","metric","Object","keys","onClick","type","onChange","e","target","map","changeStartMetric","innerText","changeEndMetric","test","App","root","document","querySelector","ReactDOM","render","StrictMode"],"mappings":"0LAEMA,EAAUC,EAAI,GAEL,SAASC,EAAT,GAAwB,IAARC,EAAO,EAAPA,IAE7B,GADiCA,EAAzBC,SAAyBD,EAAfE,WACQC,sBAA1B,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,oBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAkCJ,mBAAS,KAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAA+BN,mBAAS,KAAxC,mBAAOO,EAAP,KAAiBC,EAAjB,KACA,EAAoCR,mBAAS,GAA7C,mBAAOS,EAAP,KAAmBC,EAAnB,KACA,EAAgCV,mBAAS,GAAzC,mBAAOW,EAAP,KAAiBC,EAAjB,KACA,EAA4BZ,mBAAS,CAAEa,KAAM,IAAKC,MAAO,IAAzD,mBAAOC,EAAP,KAAeC,EAAf,KAUAC,qBAAU,WACR,IACMC,EADOxB,EAAQW,GACLE,GAGhBS,EAAU,CAAEH,KAAMN,EAAUO,MAAOK,EAFdV,EAAaS,OAGjC,CAACT,EAAYF,EAAUF,IAE1BY,qBAAU,WACR,IACMC,EADOxB,EAAQW,GACLE,GAEhBG,EAAcS,EADOR,EAAWO,MAE/B,CAACP,IAEJ,IAAMQ,EAAQ,SAAAL,GAEZ,OAAOM,OAAOC,KAAKF,MAAML,QAAXO,QAaVC,EAAO,WACXlB,GAAUD,GACV,IAAMoB,EAASC,OAAOC,KAAK9B,EAAI,IAC/B,OAAOO,EAASqB,IAGlB,OACE,qCACE,gCACE,wBAAQG,QAASJ,EAAjB,SAAwBjB,IACxB,uBACEsB,KAAK,SACLb,MAAOL,EACPmB,SAAU,SAAAC,GAAC,OAAInB,EAAcmB,EAAEC,OAAOhB,UAEvCX,GACCF,EAAM8B,KAAI,SAAAF,GAAC,OACT,wBAEEH,QAAS,SAAAG,GAAC,OAxBI,SAAAA,GACxBvB,EAAauB,GACbzB,GAAUD,GAsBc6B,CAAkBH,EAAEC,OAAOG,YAF3C,SAIGJ,GAHIA,SAOb,gCACE,wBAAQH,QAASJ,EAAjB,SAAwBf,IACxB,uBACEoB,KAAK,SACLb,MAAOC,EAAOD,MACdc,SAAU,SAAAC,GAAC,OAAIjB,EAAYiB,EAAEC,OAAOhB,UAErCX,GACCF,EAAM8B,KAAI,SAAAF,GAAC,OACT,wBAAgBH,QAAS,SAAAG,GAAC,OA5CZ,SAAAA,GACtBrB,EAAWqB,GACXzB,GAAUD,GA0C4B+B,CAAgBL,EAAEC,OAAOG,YAAvD,SACGJ,GADUA,YCrFzB,IAAMM,EAAO,CAAErC,SAAU,CAAEe,KAAM,KAAMC,MAAO,GAAKf,WAAY,KAShDqC,MARf,WACE,OACE,mCACE,cAACxC,EAAD,CAAMC,IAAKsC,OCCXE,G,YAAOC,SAASC,cAAc,UAEpCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFL,I","file":"static/js/main.3d617c35.chunk.js","sourcesContent":["import opc from './optionc.json';\r\nimport { useState, useEffect } from 'react';\r\nconst optionc = opc[0];\r\n\r\nexport default function Calc({ arg }) {\r\n  const { distance, convert_to } = arg;\r\n  const [state, setstate] = useState();\r\n  const [togle, settogle] = useState(false);\r\n  const [startMetr, setstartMetr] = useState('m');\r\n  const [endtMetr, setEndMetr] = useState('m');\r\n  const [valueStart, setValueStart] = useState(1);\r\n  const [valueEnd, setValueEnd] = useState(1);\r\n  const [result, setResult] = useState({ unit: 'm', value: 1 });\r\n\r\n  /* const convert = (w, to) => {\r\n    const { unit, value } = w;\r\n    const toConvert = optionc[unit];\r\n    const whot = toConvert[to];\r\n    const convertValue = value * whot;\r\n    setResult({ unit: to, value: convertValue });\r\n  }; */\r\n\r\n  useEffect(() => {\r\n    const whot = optionc[startMetr];\r\n    const to = whot[endtMetr];\r\n    const convertValue = valueStart * to;\r\n\r\n    setResult({ unit: endtMetr, value: round(convertValue) });\r\n  }, [valueStart, endtMetr, startMetr]);\r\n\r\n  useEffect(() => {\r\n    const whot = optionc[startMetr];\r\n    const to = whot[endtMetr];\r\n    const convertValue = valueEnd / to;\r\n    setValueStart(round(convertValue));\r\n  }, [valueEnd]);\r\n\r\n  const round = value => {\r\n    const decimals = 2;\r\n    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);\r\n  };\r\n\r\n  const changeEndMetric = e => {\r\n    setEndMetr(e);\r\n    settogle(!togle);\r\n  };\r\n\r\n  const changeStartMetric = e => {\r\n    setstartMetr(e);\r\n    settogle(!togle);\r\n  };\r\n\r\n  const open = () => {\r\n    settogle(!togle);\r\n    const metric = Object.keys(opc[0]);\r\n    return setstate(metric);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <button onClick={open}>{startMetr}</button>\r\n        <input\r\n          type=\"number\"\r\n          value={valueStart}\r\n          onChange={e => setValueStart(e.target.value)}\r\n        />\r\n        {togle &&\r\n          state.map(e => (\r\n            <button\r\n              key={e}\r\n              onClick={e => changeStartMetric(e.target.innerText)}\r\n            >\r\n              {e}\r\n            </button>\r\n          ))}\r\n      </div>\r\n      <div>\r\n        <button onClick={open}>{endtMetr}</button>\r\n        <input\r\n          type=\"number\"\r\n          value={result.value}\r\n          onChange={e => setValueEnd(e.target.value)}\r\n        />\r\n        {togle &&\r\n          state.map(e => (\r\n            <button key={e} onClick={e => changeEndMetric(e.target.innerText)}>\r\n              {e}\r\n            </button>\r\n          ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import Calc from './Components/calc';\nconst test = { distance: { unit: 'cm', value: 1 }, convert_to: 'm' };\nfunction App() {\n  return (\n    <>\n      <Calc arg={test} />\n    </>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport react from 'react';\n\nimport 'modern-normalize/modern-normalize.css';\nimport 'index.css';\nconst root = document.querySelector('#root');\n\nReactDOM.render(\n  <react.StrictMode>\n    <App />\n  </react.StrictMode>,\n  root,\n);\n"],"sourceRoot":""}